on:
  push:
    branches: [ testing ]
jobs:
  deploying:
    runs-on: ubuntu-latest
    env:
      EXECUTABLE_FILE: ./deployment/testing/deploy_on_testing.sh
      SRC_PATH: ${{ secrets.SRC_PATH_TESTING }}
      REPOSITORY: github.com/beshoyfd/lms.git
      BRANCH: testing
      LARAVEL_ENV_ENCRYPTION_KEY: ${{ secrets.LARAVEL_ENV_ENCRYPTION_KEY }}
      SH_ENCRYPTION_PASS: ${{ secrets.SH_ENCRYPTION_PASS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - run: echo $ssh_host
      - name: Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          username: ${{ secrets.SSH_USERNAME }}
          envs: EXECUTABLE_FILE,SRC_PATH,BRANCH,REPOSITORY,LARAVEL_ENV_ENCRYPTION_KEY,SH_ENCRYPTION_PASS
          script: |
            if [ -d "$SRC_PATH/.git" ]; then
                cd $SRC_PATH && git stash && git stash clear && git pull origin $BRANCH && openssl enc -d -aes-256-cbc -in $EXECUTABLE_FILE.encrypted -out $EXECUTABLE_FILE.sh -pass pass:$SH_ENCRYPTION_PASS && ([ -f $EXECUTABLE_FILE ] && chmod +rx $EXECUTABLE_FILE && $EXECUTABLE_FILE && chmod +rx ./deployment && rm -rf ./deployment && rm -rf ./.github)
                  else
                cd $SRC_PATH && git init && echo * > .gitignore && rm -rf ./.gitignore &&  git remote add origin https://oauth2:${{secrets.ACCESS_TOKEN}}@$REPOSITORY && git clean  -d  -f . && git fetch &&  git pull origin $BRANCH && openssl enc -d -aes-256-cbc -in $EXECUTABLE_FILE.encrypted -out $EXECUTABLE_FILE.sh -pass pass:$SH_ENCRYPTION_PASS && ([ -f $EXECUTABLE_FILE ] && chmod +rx $EXECUTABLE_FILE && $EXECUTABLE_FILE && chmod +rx ./deployment && rm -rf ./deployment && rm -rf ./.github)
            fi
